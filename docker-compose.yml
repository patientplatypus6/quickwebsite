version: "3.9"

networks: 
  main_network:

volumes:
  volume1:
  varwwwcertbot:
  certbotconf:
  data_volume:

services:
  go: 
    build:
      context: ./golang/server
    restart: always
    volumes: 
      - ./go:/go
    ports: 
      - "8081:8081"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - main_network
  db:
    image: postgres
    restart: always
    volumes:
      - ./docker-entrypoint-initdb.d/init.sql:/docker-entrypoint-initdb.d/init.sql
      - data_volume:/var/lib/postgresql/data
    environment:
      - POSTGRES_NAME=dev-postgres
      - POSTGRES_USER=pixel
      - POSTGRES_DATABASE=lightchan
      - POSTGRES_PASSWORD=exploration 
    ports: 
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pixel"]
      interval: 5s
      timeout: 5s
      retries: 20
    networks:
      - main_network
  blog: 
    build:
      context: ./blog/serversidenext
    restart: always
    volumes:
      - './blog/serversidenext:/app'
    ports: 
      - "3001:3001"
    networks:
      - main_network
    depends_on:
      - "db"
  nginx:
    build:
      context: ./nginx
    restart: always
    ports:
      - "80:80"
      - "443:443" 
    volumes:
      - volume1:/usr/share/nginx/html
      - varwwwcertbot:/var/www/certbot
      - certbotconf:/etc/letsencrypt 
    networks:
      - main_network
    depends_on:
      - 'db'
      - 'go'
      - 'blog'
  certbot:
    image: certbot/certbot:latest
    volumes: 
      - varwwwcertbot:/var/www/certbot
      - certbotconf:/etc/letsencrypt
    networks:
      - main_network
